server:
  port: 8000
application:
  kafka:
    topic: "demo-topic"


spring:
  kafka:
    consumer:
      group-id: "test-group"
      bootstrap-servers: "localhost:9092"
      client-id: "demo-consumer"
      auto-offset-reset: earliest

#spring:
#  kafka:
#    bootstrap-servers: "kafka.auth.svc.cluster.local:9092"
#    consumer:
#      group-id: "notificafion"
#      #      bootstrap-servers: "kafka.auth.svc.cluster.local:9092"
#      bootstrap-servers: "localhost:9092"
#      client-id: "notificafion-consumer"
#      auto-offset-reset: earliest
#      properties:
#        spring.json.trusted.packages: "ru.andreybaryshnikov.notificationservice.model.*"
#
##logging:
##  level:
##    org:
##      springframework:
##        orm:
##          jpa: INFO
##          JpaTransactionManager: DEBUG
##        transaction: INFO
##        transaction.interceptor: TRACE
#management:
#  endpoints:
#    web:
#      exposure:
#        include: "*"
#  metrics:
#    distribution:
#      percentiles-histogram:
#        "[http.server.requests]": true
#      slo:
#        http.server.requests: 10ms, 50ms, 100ms, 200ms, 300ms, 400ms, 500ms, 600ms, 800ms
#    export:
#      prometheus:
#        enabled: true
#  prometheus:
#    metrics:
#      export:
#        enabled: true
#  endpoint:
#    health:
#      show-details: always
##kafka:
##  server: "http://my-prometheus-prometheus-pushgateway.monitoring.svc.cluster.local:9091"
##  server: "http://kafka-controller-headless.auth:9092"
##  server: "kafka.auth.svc.cluster.local:9092"
#appl:
#  #  groupid: "notificafion"
#  topic: "NotificafionTopic"